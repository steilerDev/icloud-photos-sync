name: build-docker-setup
description: Sets up the environment for cross platform docker build action
inputs:
  docker-path:
    description: The path to the docker directory
    required: false
    default: docker
  app-artifact-pattern:
    description: The glob pattern of the name of the uploaded app artifact (could be 'app-artifact-build' or 'app-artifact-release')
    required: false
    default: app-artifact*
runs:
  using: composite
  steps:
    - id: setup-qemu
      uses: docker/setup-qemu-action@v3
    - id: setup-buildx
      uses: docker/setup-buildx-action@v2
    - id: setup-app-artifact
      uses: actions/download-artifact@v4
      with:
        pattern: ${{ inputs.app-artifact-pattern }}
        path: ${{ inputs.docker-path }}
    - id: select-app-artifact
      shell: bash
      run: |
        tree -a "${{ inputs.docker-path }}/"
        if [ -d "${{ inputs.docker-path }}/app-artifact-release" ]; then
          ARTIFACT_DIR="${{ inputs.docker-path }}/app-artifact-release"
        elif  [ -d "${{ inputs.docker-path }}/app-artifact-build" ]; then
          ARTIFACT_DIR="${{ inputs.docker-path }}/app-artifact-build"
        else
          echo "Unable to find artifact!"
          exit 1
        fi


        ARTIFACT="$ARTIFACT_DIR/npm-pack.tgz"
        echo "Found artifact $ARTIFACT"

        if [ ! -f "$ARTIFACT" ]; then
          echo "Artifact is not file!"
          exit 1
        fi

        ARTIFACT_TARGET_PATH="${{ inputs.docker-path }}/rootfs/opt/"
        mkdir -p "$ARTIFACT_TARGET_PATH"

        echo "Moving $ARTIFACT to $ARTIFACT_TARGET_PATH"
        mv "$ARTIFACT" "$ARTIFACT_TARGET_PATH"
    - id: build-rootfs
      shell: bash
      run: tar -C ${{ inputs.docker-path }}/rootfs -czf ${{ inputs.docker-path }}/rootfs.tar.gz ./